!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.vg=t.vg||{})}(this,function(t){"use strict";var e=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},n=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();var i=function(){function t(n,i){e(this,t),this.p1=n,this.p2=i}return n(t,[{key:"getOtherPointInEdge",value:function(t){return this.p1.isPointEqual(t)?this.p2:this.p1}},{key:"areEdgesEqual",value:function(t){return!(!this.p1.isPointEqual(t.p1)||!this.p2.isPointEqual(t.p2))||!(!this.p1.isPointEqual(t.p2)||!this.p2.isPointEqual(t.p1))}},{key:"containsPoint",value:function(t){return!(!this.p1.isPointEqual(t)&&!this.p2.isPointEqual(t))}}]),t}(),r=function(){function t(){e(this,t),this.keys=[]}return n(t,[{key:"findKeyPosition",value:function(t,e){for(var n=0,i=this.keys.length;n<i;){var r=Math.floor((n+i)/2);t.isLessThanOtherEdgeKey(this.keys[r])?i=r:n=r+1}return n}},{key:"addKey",value:function(t,e){for(var n=0,i=this.keys.length;n<i;){var r=Math.floor((n+i)/2);t.isLessThanOtherEdgeKey(this.keys[r])?i=r:n=r+1}this.keys.splice(n,0,t)}}]),t}(),o=function(){function t(n,i,r){e(this,t),void 0===r&&(r=-1),this.x=n,this.y=i,this.polygonID=r,this.edges=[]}return n(t,[{key:"isPointEqual",value:function(t){return this.x===t.x&&this.y===t.y}},{key:"angleToPoint",value:function(t){if(this.x===t.x&&this.y===t.y)return 0;var e=t.x-this.x,n=t.y-this.y;return 0===n&&e<0&&Math.PI,e<0?Math.PI+Math.atan(n/e):n<0?2*Math.PI+Math.atan(n/e):Math.atan(n/e)}},{key:"edgeDistance",value:function(t){return f(this,t)}}]),t}(),s=(Math.PI,Math.PI,Math.pow(10,13)),a=Math.pow(10,13);function h(t,e,n){var i=n.p1,r=n.p2,o=u(t,e,i),s=u(t,e,r),a=u(i,r,t),h=u(i,r,e);return o!==s&&a!==h||(!(0!==o||!l(t,i,e))||(!(0!==s||!l(t,r,e))||(!(0!==a||!l(i,t,r))||!(0!==h||!l(i,e,r)))))}function u(t,e,n){var i=parseInt(((e.x-t.x)*(n.y-t.y)-(e.y-t.y)*(n.x-t.x))*s)/a;return i>0?1:i<0?-1:0}function l(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function y(t,e,n){var i=Math.pow(n.x-e.x,2)+Math.pow(n.y-e.y,2),r=Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2),o=Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2);return Math.acos((i+o-r)/(2*Math.sqrt(i)*Math.sqrt(o)))}function p(t,e,n){var i=function(t,e,n){if(n.containsPoint(t))return t;if(n.containsPoint(e))return e;if(n.p1.x===n.p2.x){if(t.x===e.x)return null;var i=(t.y-e.y)/(t.x-e.x),r=n.p1.x,s=i*(r-t.x)+t.y;return new o(r,s)}if(t.x===e.x){var a=(n.p1.y-n.p2.y)/(n.p1.x-n.p2.x),h=t.x,u=a*(h-n.p1.x)+n.p1.y;return new o(h,u)}var l=(t.y-e.y)/(t.x-e.x),y=(n.p1.y-n.p2.y)/(n.p1.x-n.p2.x);if(l===y)return null;var p=(y*n.p1.x-l*t.x+t.y-n.p1.y)/(y-l),f=y*(p-n.p1.x)+n.p1.y;return new o(p,f)}(t,e,n);return null!==i?f(t,i):0}function f(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}var g=function(){function t(n,i,r){e(this,t),this.p1=n,this.p2=i,this.edge=r}return n(t,[{key:"isLessThanOtherEdgeKey",value:function(t){if(this.matchesOtherKey(t))return!1;if(!h(this.p1,this.p2,t.edge))return!0;var e=p(this.p1,this.p2,this.edge),n=p(this.p1,this.p2,t.edge);if(e>n)return!1;if(e<n)return!0;if(e===n){var i=null;t.edge.containsPoint(this.edge.p1)?i=this.edge.p1:t.edge.containsPoint(this.edge.p2)&&(i=this.edge.p2);return y(this.p1,this.p2,this.edge.getOtherPointInEdge(i))<y(this.p1,this.p2,t.edge.getOtherPointInEdge(i))}}},{key:"matchesOtherKey",value:function(t){return this.edge.areEdgesEqual(t.edge)}}]),t}(),c=function(){function t(n){e(this,t),this.points=[],this.vg=[],this.edges=[];var r=0,s=0,a=this,h=null;!function t(e,n,i){if(null!==e)for(var r,o,s,a,h,u,l,y,p=0,f=0,g=e.type,c="FeatureCollection"===g,v="Feature"===g,d=c?e.features.length:1,x=0;x<d;x++){h=(y=!!(l=c?e.features[x].geometry:v?e.geometry:e)&&"GeometryCollection"===l.type)?l.geometries.length:1;for(var P=0;P<h;P++){var k=0,M=0;if(null!==(a=y?l.geometries[P]:l)){u=a.coordinates;var w=a.type;switch(p=!i||"Polygon"!==w&&"MultiPolygon"!==w?0:1,w){case null:break;case"Point":if(!1===n(u,f,x,k,M))return!1;f++,k++;break;case"LineString":case"MultiPoint":for(r=0;r<u.length;r++){if(!1===n(u[r],f,x,k,M))return!1;f++,"MultiPoint"===w&&k++}"LineString"===w&&k++;break;case"Polygon":case"MultiLineString":for(r=0;r<u.length;r++){for(o=0;o<u[r].length-p;o++){if(!1===n(u[r][o],f,x,k,M))return!1;f++}"MultiLineString"===w&&k++,"Polygon"===w&&M++}"Polygon"===w&&k++;break;case"MultiPolygon":for(r=0;r<u.length;r++){for("MultiPolygon"===w&&(M=0),o=0;o<u[r].length;o++){for(s=0;s<u[r][o].length-p;s++){if(!1===n(u[r][o][s],f,x,k,M))return!1;f++}M++}k++}break;case"GeometryCollection":for(r=0;r<a.geometries.length;r++)if(!1===t(a.geometries[r],n,i))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}(n,function(t,e,u,l,y){y>r&&(r=y,s=e);var p=new o(t[0],t[1],y);if(a.points.push(p),e-s==0){var f=n.features[u].geometry.coordinates[y][n.features[u].geometry.coordinates[y].length-2];h=new o(f[0],f[1],y)}var g=new i(h,p);p.edges.push(g),h.edges.push(g),a.edges.push(g),h=p},!0),this.points[this.points.length-1].edges.push(this.points[0].edges[0])}return n(t,[{key:"processGraph",value:function(){for(var t=[],e=0;e<this.points.length;e++){var n=this.points[e],i=this.clonePoints();this.sortPoints(n,i);for(var s=new r,a=new o(1e4,n.y),y=0;y<this.edges.length;y++){var p=this.edges[y];if(!p.containsPoint(n)&&h(n,a,p)){if(l(n,p.p1,a)||l(n,p.p2,a))continue;s.addKey(new g(n,a,p))}}for(var f=[],c=null,v=null,d=0;d<i.length;d++){var x=i[d];if(x!==n){if(s.keys.length>0)for(var P=0;P<x.edges.length;P++){var k=x.edges[P];if(-1===u(n,x,k.getOtherPointInEdge(x))){var M=new g(n,x,k),w=s.findKeyPosition(M)-1;s.keys.length>0&&s.keys[w].matchesOtherKey(M)&&s.keys.splice(w,1)}}var E=!1;if(null!==c&&0===u(n,c,x)&&l(n,c,x))if(v){E=!0;for(var m=0;m<s.keys.length;m++){var I=s.keys[m];if(!I.edge.containsPoint(c)&&h(c,x,I.edge)){E=!1;break}}E&&this.edgeInPolygon(c,x)&&(E=!1)}else E=!1;else 0===s.keys.length?E=!0:h(n,x,s.keys[0].edge)||(E=!0);var q=0!==e?this.points[e-1]:this.points[this.points.length-1],b=e!==this.points.length-1?this.points[e+1]:this.points[0],O=x.isPointEqual(q)||x.isPointEqual(b);E&&!O&&(E=!this.edgeInPolygon(n,x)),E&&f.push(x);for(var K=0;K<x.edges.length;K++){var T=x.edges[K];if(!T.containsPoint(n)&&1===u(n,x,T.getOtherPointInEdge(x))){var L=new g(n,x,T);s.addKey(L)}}c=x,v=E}}t.push({point:n,otherVis:f})}return t}},{key:"clonePoints",value:function(){return this.points.slice(0)}},{key:"sortPoints",value:function(t,e){e.sort(function(e,n){var i=t.angleToPoint(e),r=t.angleToPoint(n);if(0===i&&r<1)return 1;if(i<r)return-1;if(i>r)return 1;var o=f(e,t),s=f(n,t);return o<s?-1:o>s?1:0})}},{key:"findPoint",value:function(t){for(var e=0;e<this.points.length;e++)if(this.points[e].isPointEqual(t))return this.points[e]}},{key:"edgeInPolygon",value:function(t,e){if(t.polygonID!==e.polygonID)return!1;if(-1===t.polygonID||-1===e.polygonID)return!1;var n=new o((t.x+e.x)/2,(t.y+e.y)/2);return this.polygonCrossing(n,this.edges)}},{key:"polygonCrossing",value:function(t,e){for(var n=new o(1e4,t.y),i=0,r=!1,s=0,a=0;a<e.length;a++){var l=e[a];if(!(t.y<l.p1.y&&t.y<l.p2.y)&&!(t.y>l.p1.y&&t.y>l.p2.y)){var y=0===u(t,l.p1,n)&&l.p1.x>t.x,p=0===u(t,l.p2,n)&&l.p2.x>t.x,f=y?l.p1:l.p2;y||p?(s=l.getOtherPointInEdge(f).y>t.y?s++:s--,r?(0===s&&i++,r=!1,s=0):r=!0):h(t,n,l)&&i++}}return i%2!=0}}]),t}();t.Graph=c,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=vis-graph.js.map
