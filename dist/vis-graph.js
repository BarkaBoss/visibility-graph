!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.vg=t.vg||{})}(this,function(t){"use strict";var e=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},n=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();var i=function(){function t(n,i){e(this,t),this.p1=n,this.p2=i}return n(t,[{key:"getOtherPointInEdge",value:function(t){return this.p1.isPointEqual(t)?this.p2:this.p1}},{key:"areEdgesEqual",value:function(t){return!(!this.p1.isPointEqual(t.p1)||!this.p2.isPointEqual(t.p2))||!(!this.p1.isPointEqual(t.p2)||!this.p2.isPointEqual(t.p1))}},{key:"containsPoint",value:function(t){return!(!this.p1.isPointEqual(t)&&!this.p2.isPointEqual(t))}}]),t}(),r=function(){function t(){e(this,t),this.keys=[]}return n(t,[{key:"findKeyPosition",value:function(t,e){for(var n=0,i=this.keys.length;n<i;){var r=Math.floor((n+i)/2);t.isLessThanOtherEdgeKey(this.keys[r])?i=r:n=r+1}return n}},{key:"addKey",value:function(t,e){var n=this.findKeyPosition(t);this.keys.splice(n,0,t)}}]),t}(),o=function(){function t(n,i,r){e(this,t),void 0===r&&(r=-1),this.x=n,this.y=i,this.polygonID=r,this.startingVertice=!1,this.endVertice=!1,this.edges=[]}return n(t,[{key:"isPointEqual",value:function(t){return this.x===t.x&&this.y===t.y}},{key:"angleToPoint",value:function(t){if(this.x===t.x&&this.y===t.y)return 0;var e=t.x-this.x,n=t.y-this.y;return 0===n&&e<0&&Math.PI,e<0?Math.PI+Math.atan(n/e):n<0?2*Math.PI+Math.atan(n/e):Math.atan(n/e)}},{key:"edgeDistance",value:function(t){return g(this,t)}}]),t}(),s=(Math.PI,Math.PI,Math.pow(10,13)),a=Math.pow(10,13);function u(t,e,n){var i=n.p1,r=n.p2,o=h(t,e,i),s=h(t,e,r),a=h(i,r,t),u=h(i,r,e);return o!==s&&a!==u||(!(0!==o||!l(t,i,e))||(!(0!==s||!l(t,r,e))||(!(0!==a||!l(i,t,r))||!(0!==u||!l(i,e,r)))))}function h(t,e,n){var i=parseInt(((e.x-t.x)*(n.y-t.y)-(e.y-t.y)*(n.x-t.x))*s)/a;return i>0?1:i<0?-1:0}function l(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function p(t,e,n){var i=Math.pow(n.x-e.x,2)+Math.pow(n.y-e.y,2),r=Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2),o=Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2);return Math.acos((i+o-r)/(2*Math.sqrt(i)*Math.sqrt(o)))}function y(t,e,n){var i=function(t,e,n){if(n.containsPoint(t))return t;if(n.containsPoint(e))return e;if(n.p1.x===n.p2.x){if(t.x===e.x)return null;var i=(t.y-e.y)/(t.x-e.x),r=n.p1.x,s=i*(r-t.x)+t.y;return new o(r,s)}if(t.x===e.x){var a=(n.p1.y-n.p2.y)/(n.p1.x-n.p2.x),u=t.x,h=a*(u-n.p1.x)+n.p1.y;return new o(u,h)}var l=(t.y-e.y)/(t.x-e.x),p=(n.p1.y-n.p2.y)/(n.p1.x-n.p2.x);if(l===p)return null;var y=(p*n.p1.x-l*t.x+t.y-n.p1.y)/(p-l),g=p*(y-n.p1.x)+n.p1.y;return new o(y,g)}(t,e,n);return null!==i?g(t,i):0}function g(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}var f=function(){function t(n,i,r){e(this,t),this.p1=n,this.p2=i,this.edge=r}return n(t,[{key:"isLessThanOtherEdgeKey",value:function(t){if(this.matchesOtherKey(t))return!1;if(!u(this.p1,this.p2,t.edge))return!0;var e=y(this.p1,this.p2,this.edge),n=y(this.p1,this.p2,t.edge);if(e>n)return!1;if(e<n)return!0;if(e===n){var i=null;t.edge.containsPoint(this.edge.p1)?i=this.edge.p1:t.edge.containsPoint(this.edge.p2)&&(i=this.edge.p2);return p(this.p1,this.p2,this.edge.getOtherPointInEdge(i))<p(this.p1,this.p2,t.edge.getOtherPointInEdge(i))}}},{key:"matchesOtherKey",value:function(t){return this.edge.areEdgesEqual(t.edge)}}]),t}(),c=function(){function t(n){e(this,t),this.points=[],this.vg=[],this.edges=[],this.polygons=[[]];var r=0,s=0,a=0,u=0,h=this,l=null;!function t(e,n,i){if(null!==e)for(var r,o,s,a,u,h,l,p,y=0,g=0,f=e.type,c="FeatureCollection"===f,d="Feature"===f,v=c?e.features.length:1,x=0;x<v;x++){u=(p=!!(l=c?e.features[x].geometry:d?e.geometry:e)&&"GeometryCollection"===l.type)?l.geometries.length:1;for(var P=0;P<u;P++){var k=0,M=0;if(null!==(a=p?l.geometries[P]:l)){h=a.coordinates;var w=a.type;switch(y=!i||"Polygon"!==w&&"MultiPolygon"!==w?0:1,w){case null:break;case"Point":if(!1===n(h,g,x,k,M))return!1;g++,k++;break;case"LineString":case"MultiPoint":for(r=0;r<h.length;r++){if(!1===n(h[r],g,x,k,M))return!1;g++,"MultiPoint"===w&&k++}"LineString"===w&&k++;break;case"Polygon":case"MultiLineString":for(r=0;r<h.length;r++){for(o=0;o<h[r].length-y;o++){if(!1===n(h[r][o],g,x,k,M))return!1;g++}"MultiLineString"===w&&k++,"Polygon"===w&&M++}"Polygon"===w&&k++;break;case"MultiPolygon":for(r=0;r<h.length;r++){for("MultiPolygon"===w&&(M=0),o=0;o<h[r].length;o++){for(s=0;s<h[r][o].length-y;s++){if(!1===n(h[r][o][s],g,x,k,M))return!1;g++}M++}k++}break;case"GeometryCollection":for(r=0;r<a.geometries.length;r++)if(!1===t(a.geometries[r],n,i))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}(n,function(t,e,p,y,g){var f=!1;g>r&&(r=g,s=e),p>a&&(h.points[h.points.length-1].edges.push(h.points[u].edges[0]),l.endVertice=!0,l.endVerticeStart=u,a=p,f=!0,u=e,h.polygons.push([]));var c=new o(t[0],t[1],p);if(h.points.push(c),e-s==0||f){c.startingVertice=!0,c.endVerticeStart=n.features[p].geometry.coordinates[g].length-2;var d=n.features[p].geometry.coordinates[g][n.features[p].geometry.coordinates[g].length-2];l=new o(d[0],d[1],p)}var v=new i(l,c);c.edges.push(v),l.edges.push(v),h.polygons[p].push(v),h.edges.push(v),l=c},!0),this.points[this.points.length-1].edges.push(this.points[u].edges[0]),l.endVertice=!0,l.endVerticeStart=u}return n(t,[{key:"processGraph",value:function(){for(var t=[],e=0;e<this.points.length;e++){var n=this.points[e],i=n.startingVertice?this.points[e+n.endVerticeStart]:this.points[e-1],s=n.endVertice?this.points[n.endVerticeStart]:this.points[e+1],a=this.clonePoints();this.sortPoints(n,a);for(var p=new r,y=new o(1e4,n.y),g=0;g<this.edges.length;g++){var c=this.edges[g];if(!c.containsPoint(n)&&u(n,y,c)){if(l(n,c.p1,y)||l(n,c.p2,y))continue;p.addKey(new f(n,y,c))}}for(var d=[],v=null,x=null,P=0;P<a.length;P++){var k=a[P];if(k!==n){if(p.keys.length>0)for(var M=0;M<k.edges.length;M++){var w=k.edges[M];if(-1===h(n,k,w.getOtherPointInEdge(k))){var E=new f(n,k,w),m=p.findKeyPosition(E)-1;-1!==m&&p.keys[m].matchesOtherKey(E)&&p.keys.splice(m,1)}}var I=!1;if(null!==v&&0===h(n,v,k)&&l(n,v,k))if(x){I=!0;for(var q=0;q<p.keys.length;q++){var b=p.keys[q];if(!b.edge.containsPoint(v)&&u(v,k,b.edge)){I=!1;break}}I&&this.edgeInPolygon(v,k)&&(I=!1)}else I=!1;else 0===p.keys.length?I=!0:u(n,k,p.keys[0].edge)||(I=!0);var O=k.isPointEqual(i)||k.isPointEqual(s);I&&!O&&(I=!this.edgeInPolygon(n,k)),I&&d.push(k);for(var V=0;V<k.edges.length;V++){var K=k.edges[V];if(!K.containsPoint(n)&&1===h(n,k,K.getOtherPointInEdge(k))){var S=new f(n,k,K);p.addKey(S)}}v=k,x=I}}t.push({point:n,otherVis:d})}return t}},{key:"clonePoints",value:function(){return this.points.slice(0)}},{key:"sortPoints",value:function(t,e){e.sort(function(e,n){var i=t.angleToPoint(e),r=t.angleToPoint(n);if(i<r)return-1;if(i>r)return 1;var o=g(e,t),s=g(n,t);return o<s?-1:o>s?1:0})}},{key:"findPoint",value:function(t){for(var e=0;e<this.points.length;e++)if(this.points[e].isPointEqual(t))return this.points[e]}},{key:"edgeInPolygon",value:function(t,e){if(t.polygonID!==e.polygonID)return!1;if(-1===t.polygonID||-1===e.polygonID)return!1;var n=new o((t.x+e.x)/2,(t.y+e.y)/2);return this.polygonCrossing(n,this.polygons[t.polygonID])}},{key:"polygonCrossing",value:function(t,e){for(var n=new o(1e4,t.y),i=0,r=!1,s=0,a=0;a<e.length;a++){var l=e[a];if(!(t.y<l.p1.y&&t.y<l.p2.y)&&!(t.y>l.p1.y&&t.y>l.p2.y)){var p=0===h(t,l.p1,n)&&l.p1.x>t.x,y=0===h(t,l.p2,n)&&l.p2.x>t.x,g=p?l.p1:l.p2;p||y?(s=l.getOtherPointInEdge(g).y>t.y?s++:s--,r?(0===s&&i++,r=!1,s=0):r=!0):u(t,n,l)&&i++}}return i%2!=0}}]),t}();t.Graph=c,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=vis-graph.js.map
