!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.vg=e.vg||{})}(this,function(e){"use strict";var t=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},n=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var i=function(){function e(n,i){t(this,e),this.p1=n,this.p2=i}return n(e,[{key:"getOtherPointInEdge",value:function(e){return this.p1.isPointEqual(e)?this.p2:this.p1}},{key:"areEdgesEqual",value:function(e){return!(!this.p1.isPointEqual(e.p1)||!this.p2.isPointEqual(e.p2))||!(!this.p1.isPointEqual(e.p2)||!this.p2.isPointEqual(e.p1))}},{key:"containsPoint",value:function(e){return!(!this.p1.isPointEqual(e)&&!this.p2.isPointEqual(e))}}]),e}(),r=function(){function e(){t(this,e),this.keys=[]}return n(e,[{key:"findKeyPosition",value:function(e,t){for(var n=0,i=this.keys.length;n<i;){var r=Math.floor((n+i)/2);e.isLessThanOtherEdgeKey(this.keys[r])?i=r:n=r+1}return n}},{key:"addKey",value:function(e,t){var n=this.findKeyPosition(e);this.keys.splice(n,0,e)}}]),e}(),o=function(){function e(n,i,r){t(this,e),void 0===r&&(r=-1),this.x=n,this.y=i,this.polygonID=r,this.startingVertice=!1,this.endVertice=!1,this.edges=[]}return n(e,[{key:"isPointEqual",value:function(e){return this.x===e.x&&this.y===e.y}},{key:"angleToPoint",value:function(e){if(this.x===e.x&&this.y===e.y)return 0;var t=e.x-this.x,n=e.y-this.y;return 0===n&&t<0&&Math.PI,t<0?Math.PI+Math.atan(n/t):n<0?2*Math.PI+Math.atan(n/t):Math.atan(n/t)}},{key:"edgeDistance",value:function(e){return g(this,e)}}]),e}(),s=(Math.PI,Math.PI,Math.pow(10,13)),a=Math.pow(10,13);function u(e,t,n){var i=n.p1,r=n.p2,o=h(e,t,i),s=h(e,t,r),a=h(i,r,e),u=h(i,r,t);return o!==s&&a!==u||(!(0!==o||!y(e,i,t))||(!(0!==s||!y(e,r,t))||(!(0!==a||!y(i,e,r))||!(0!==u||!y(i,t,r)))))}function h(e,t,n){var i=parseInt(((t.x-e.x)*(n.y-e.y)-(t.y-e.y)*(n.x-e.x))*s)/a;return i>0?1:i<0?-1:0}function y(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function l(e,t,n){var i=Math.pow(n.x-t.x,2)+Math.pow(n.y-t.y,2),r=Math.pow(n.x-e.x,2)+Math.pow(n.y-e.y,2),o=Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2);return Math.acos((i+o-r)/(2*Math.sqrt(i)*Math.sqrt(o)))}function p(e,t,n){var i=function(e,t,n){if(n.containsPoint(e))return e;if(n.containsPoint(t))return t;if(n.p1.x===n.p2.x){if(e.x===t.x)return null;var i=(e.y-t.y)/(e.x-t.x),r=n.p1.x,s=i*(r-e.x)+e.y;return new o(r,s)}if(e.x===t.x){var a=(n.p1.y-n.p2.y)/(n.p1.x-n.p2.x),u=e.x,h=a*(u-n.p1.x)+n.p1.y;return new o(u,h)}var y=(e.y-t.y)/(e.x-t.x),l=(n.p1.y-n.p2.y)/(n.p1.x-n.p2.x);if(y===l)return null;var p=(l*n.p1.x-y*e.x+e.y-n.p1.y)/(l-y),g=l*(p-n.p1.x)+n.p1.y;return new o(p,g)}(e,t,n);return null!==i?g(e,i):0}function g(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}var f=function(){function e(n,i,r){t(this,e),this.p1=n,this.p2=i,this.edge=r}return n(e,[{key:"isLessThanOtherEdgeKey",value:function(e){if(this.matchesOtherKey(e))return!1;if(!u(this.p1,this.p2,e.edge))return!0;var t=p(this.p1,this.p2,this.edge),n=p(this.p1,this.p2,e.edge);if(t>n)return!1;if(t<n)return!0;if(t===n){var i=null;e.edge.containsPoint(this.edge.p1)?i=this.edge.p1:e.edge.containsPoint(this.edge.p2)&&(i=this.edge.p2);return l(this.p1,this.p2,this.edge.getOtherPointInEdge(i))<l(this.p1,this.p2,e.edge.getOtherPointInEdge(i))}}},{key:"matchesOtherKey",value:function(e){return this.edge.areEdgesEqual(e.edge)}}]),e}(),c=function(){function e(n){t(this,e),this.points=[],this.vg=[],this.edges=[],this.polygons=[[]];var r=0,s=0,a=0,u=0,h=this,y=null;!function e(t,n,i){if(null!==t)for(var r,o,s,a,u,h,y,l,p=0,g=0,f=t.type,c="FeatureCollection"===f,d="Feature"===f,v=c?t.features.length:1,x=0;x<v;x++){u=(l=!!(y=c?t.features[x].geometry:d?t.geometry:t)&&"GeometryCollection"===y.type)?y.geometries.length:1;for(var P=0;P<u;P++){var k=0,M=0;if(null!==(a=l?y.geometries[P]:y)){h=a.coordinates;var w=a.type;switch(p=!i||"Polygon"!==w&&"MultiPolygon"!==w?0:1,w){case null:break;case"Point":if(!1===n(h,g,x,k,M))return!1;g++,k++;break;case"LineString":case"MultiPoint":for(r=0;r<h.length;r++){if(!1===n(h[r],g,x,k,M))return!1;g++,"MultiPoint"===w&&k++}"LineString"===w&&k++;break;case"Polygon":case"MultiLineString":for(r=0;r<h.length;r++){for(o=0;o<h[r].length-p;o++){if(!1===n(h[r][o],g,x,k,M))return!1;g++}"MultiLineString"===w&&k++,"Polygon"===w&&M++}"Polygon"===w&&k++;break;case"MultiPolygon":for(r=0;r<h.length;r++){for("MultiPolygon"===w&&(M=0),o=0;o<h[r].length;o++){for(s=0;s<h[r][o].length-p;s++){if(!1===n(h[r][o][s],g,x,k,M))return!1;g++}M++}k++}break;case"GeometryCollection":for(r=0;r<a.geometries.length;r++)if(!1===e(a.geometries[r],n,i))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}(n,function(e,t,l,p,g){var f=!1;g>r&&(r=g,s=t),l>a&&(h.points[h.points.length-1].edges.push(h.points[u].edges[0]),y.endVertice=!0,y.endVerticeStart=u,a=l,f=!0,u=t,h.polygons.push([]));var c=new o(e[0],e[1],l);if(h.points.push(c),t-s==0||f){c.startingVertice=!0,c.endVerticeStart=n.features[l].geometry.coordinates[g].length-2;var d=n.features[l].geometry.coordinates[g][n.features[l].geometry.coordinates[g].length-2];y=new o(d[0],d[1],l)}var v=new i(y,c);c.edges.push(v),y.edges.push(v),h.polygons[l].push(v),h.edges.push(v),y=c},!0),this.points[this.points.length-1].edges.push(this.points[u].edges[0]),y.endVertice=!0,y.endVerticeStart=u}return n(e,[{key:"processGraph",value:function(){for(var e=[],t=this.clonePoints(),n=0;n<this.points.length;n++){var i=this.points[n],s=i.startingVertice?this.points[n+i.endVerticeStart]:this.points[n-1],a=i.endVertice?this.points[i.endVerticeStart]:this.points[n+1];this.sortPoints(i,t);for(var l=new r,p=new o(1e4,i.y),g=0;g<this.edges.length;g++){var c=this.edges[g];if(!c.containsPoint(i)&&u(i,p,c)){if(y(i,c.p1,p)||y(i,c.p2,p))continue;l.addKey(new f(i,p,c))}}for(var d=[],v=null,x=null,P=0;P<t.length;P++){var k=t[P];if(k!==i){if(l.keys.length>0)for(var M=0;M<k.edges.length;M++){var w=k.edges[M];if(-1===h(i,k,w.getOtherPointInEdge(k))){var E=new f(i,k,w),m=l.findKeyPosition(E)-1;-1!==m&&l.keys[m].matchesOtherKey(E)&&l.keys.splice(m,1)}}var I=!1;if(null!==v&&0===h(i,v,k)&&y(i,v,k))if(x){I=!0;for(var q=0;q<l.keys.length;q++){var b=l.keys[q];if(!b.edge.containsPoint(v)&&u(v,k,b.edge)){I=!1;break}}I&&this.edgeInPolygon(v,k)&&(I=!1)}else I=!1;else 0===l.keys.length?I=!0:u(i,k,l.keys[0].edge)||(I=!0);var O=k.isPointEqual(s)||k.isPointEqual(a);I&&!O&&(I=!this.edgeInPolygon(i,k)),I&&d.push({x:k.x,y:k.y});for(var V=0;V<k.edges.length;V++){var K=k.edges[V];if(!K.containsPoint(i)&&1===h(i,k,K.getOtherPointInEdge(k))){var S=new f(i,k,K);l.addKey(S)}}v=k,x=I}}e.push({node:{x:i.x,y:i.y},visibleNodes:d})}return e}},{key:"clonePoints",value:function(){return this.points.slice(0)}},{key:"sortPoints",value:function(e,t){t.sort(function(t,n){var i=e.angleToPoint(t),r=e.angleToPoint(n);if(i<r)return-1;if(i>r)return 1;var o=g(t,e),s=g(n,e);return o<s?-1:o>s?1:0})}},{key:"findPoint",value:function(e){for(var t=0;t<this.points.length;t++)if(this.points[t].isPointEqual(e))return this.points[t]}},{key:"edgeInPolygon",value:function(e,t){if(e.polygonID!==t.polygonID)return!1;if(-1===e.polygonID||-1===t.polygonID)return!1;var n=new o((e.x+t.x)/2,(e.y+t.y)/2);return this.polygonCrossing(n,this.polygons[e.polygonID])}},{key:"polygonCrossing",value:function(e,t){for(var n=new o(1e4,e.y),i=0,r=!1,s=0,a=0;a<t.length;a++){var y=t[a];if(!(e.y<y.p1.y&&e.y<y.p2.y)&&!(e.y>y.p1.y&&e.y>y.p2.y)){var l=0===h(e,y.p1,n)&&y.p1.x>e.x,p=0===h(e,y.p2,n)&&y.p2.x>e.x,g=l?y.p1:y.p2;l||p?(s=y.getOtherPointInEdge(g).y>e.y?s++:s--,r?(0===s&&i++,r=!1,s=0):r=!0):u(e,n,y)&&i++}}return i%2!=0}}]),e}();e.Graph=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=vis-graph.js.map
